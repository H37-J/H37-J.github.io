---
layout:     post
title:      "배치에 대한 대하여"
subtitle:   "스프링 배치에 대하여"
author:     "H37-J"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - spring
---

### 스프링 배치

가볍고 유연하며 개발자가 최소한의 코드만으로 강력한 배치 애플리케이션을 만들 수 있도록 설계되었다
다양한 기술로 구현된 많은 컴포넌트를 제공하며 제공된 컴포넌트만 사용해도 대부분의 배치 애플리케이션을 구축할 수 있다. 주로 일일 송장 생성, 급여 시스템, 데이터 추출, 변환, 적재 프로세스등이 있다.

### 처리과정

job은 하나 이상의 step을 포함한다. 각 스텝은 사용자가 직접 장성한 tasklet구현체를 사용하거나 청크기반 처리에 참여하는 방식으로 단일 작업을 수행한다.청크 기반 처리에 스텝은 ItemReader를 사용해 특정 형태의 데이터를 읽고 필요에 따라 ItemProcessor를 사용해 데이터를 원하는 대로 반환하며 마지막으로 itemWriter를 사용해 데이터를 기록한다. 스텝은 청크 크기(트랜잭션 당 처리할 데이터의 양), 다중 스레드 여부, 건너뛰기 제한 건수등을 구성하는 다양한 애트리뷰트를 갖고있다. 리스너는 스텝의 라이플 사이클뿐만 아니라 잡의 라이플사이클 중에 발생한 다양한 이벤트를 받을 수 있다. 예를 들어 청크 기반 처리시에 스텝의 시작전이나 스텝이 끝났을 때 이벤트를 받을 수 있다

### 다중 스레드 스텝

스텝을 다중 스레드로 만든다. 사용자가 원하는 TaskExecutor 인스턴스를 스텝 구성해 추가하기만 하면, 청크 기반 처리 환경에서 아이템의 각 청크가 독립적인 개별 실행 스레드내에서 처리된다.

### 병렬 스텝

두 개의 큰 파일을 읽어야 할 때, 이러한 파일들을 읽는데 서로 영향을 주지 않는다면 순서대로 스텝을 처리할 필요가 없다. 이럴때 병렬적으로 처리할수 있도록 스프링 배치 기능을 사용 할 수 있다.

### 원격 청킹

스텝을 많은 워커에 원격으로 작업을 분배시키고 AMQP나 JMS와 같은 내구성 있는 미들웨어를 이용하여 통신할 수 있게 한다.일반적으로 원격 청킹은 프로세스 내에서 데이터 읽기 병목이 없는 상황에서 청크 데이터를 쓰거나 선택적으로 처리를 하는데 데이터 청크는 슬레이브 노드가 가져가 처리할 수 있도록 미들웨어를 통해 전송되며, 슬레이브 노드는 해당 청크의 처리 상태를 마스터에게 다시 전달한다.
