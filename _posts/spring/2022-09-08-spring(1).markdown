---
layout:     post
title:      "스프링의 기본 개념들 정리"
subtitle:   "스프링의 기본 개념 단어들 정리"
author:     "H37-J"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - spring
---

### 스프링이란?

자바 애플리케이션 개발을 위한 경량 프레임워크 여기서 경량은 최소한의 영향을 준다는 의미이다

### 서블릿

요청을 분석하고 처리하기 위해 적절한 컨트롤러로 요청을 보내는 역할을 한다

### 핸들러맵핑

들어오는 요청을 핸들러에 매핑한다.컨트롤러 클래스 내의 메서드 내에 @RequestMapping을 적용함으로써 HTTP경로와 핸들러를 매핑한 HandlerMapping구현체를 자동으로 등록 해준다

### 프레임워크와 라이브러리의 차이

프레임워크는 프레임워크가 사용자의 애플리케이션 코드를 가져다 사용한다. 즉 제어역전의 집합들이다.
라이브러리는 사용자가 만들어놓은 함수들의 집합을 사용자가 사용할 뿐이다.

### 제어역전과 의존성 주입

인스턴스를 생성할때 new나 팩터리 클래스가 아닌 IoC접근 방식을 사용해 런타임 순간에 외부 프로세스에서 인스턴스를 생성한다. 자바빈과 인터페이스 두가지로 구현한다. 클래스, 에너테이션, XML등으로 정의 할 수 있다

DI를 사용하면 애플리케이션을 인터페이스 기반으로 설계하는데 추가 코드가 거의 필요하지 않다. 또, 의존성 구현체를 쉽게 다른 구현체로 바꿀 수 있다.

일반적으로 의존성 주입을 기반으로 하는 애플리케이션은 모든 주요 컴포넌트를 인터페이스로 정의하고 DI컨테이너를 사용해 인터페이스의 구현체를 생성하고 서로 연결한다.

### IOC(제어역전)

개발자가 만든 애플리케이션 코드가 프레임워크에 의해 제어된다. 외부 라이브러리, 프레임워크가 필요한 애플리케이션 코드를 선택하여 흐름을 진행한다. Controller, Serivce같은 객체들의 동작을 개발자가 구현하지만 어느 시점에 호출 할지는 프레임 워크가 결정한다, 예를들어 @Test어노테에이션을 붙이면 Junit 프레임워크가 해당 메서드를 호출 하는것 처럼 사용자의 코드를 프레임워크가 호출한다

### DI(의존성 주입)

IOC를 구현하는 방법 중 하나라고 할 수 있다. 객체를 스프링 빈으로 설정하면 스프링은 이 빈을 이용하여
객체를 제어역전 시켜 의존성에 대한 관계를 주입한다.

### Bean

의존관계를 부여하는 오브젝트. 개발자가 스스로 객체를 만들고 그것을 빈으로 설정하면 본인이 만든 객체를 쉽게 불러 사용 할 수 있다.

### ApplicationContext

스프링 애플리케이션 전반에 걸쳐 모든 구성요소의 제어 작업을 담당하는 IOC엔진. 정보를 참고해서 빈의 설정, 관계설정등의 제어를 총괄한다.

### 애너테이션

* @Component: Spring framework의 <context:component:scan>과 같다

### AOP

AOP는 애플리케이션의 여러 부분에 공통적으로 적용되는 로직인 크로스커팅 로직을 한곳에서 구현하고 해당 로직을 애플리케이션 전반에 자동으로 적용할 수 있게 해준다.  
스프링의 AOP는 대상 객체에 동적프록시를 생성하고 크로스커팅 로직을 수행하도록 구성된 어드바이스를 그 객체에 위빙 한다.객체는 AOP어드바이스를 적용할 메서드를 선언하는 인터페이스를 구현해야한다.
AOP의 유명한 라이브러리로는 AspectJ가 있는데 이는 객체 생성, 클래스 로딩, 강력한 크로스커팅을 지원한다.

### 데이터 액세스

스프링은 JDBC API를 기반으로 단순화한 래퍼 API를 제공해 많은 프로젝트에서 표준 JDBC를 유연하게 사용할 수 있다. 스프링의 데이터 액세스 모듈은 JDBC, 하이버네이트, JDO, JPA등을 제공한다.

### 트랜잭션 관리

스프링의 트랜잭션 추상화 레이어를 사용해 기본 트랜잭션 프로토콜과 리소스 관리자를 쉽게 변경 할 수 있다.

### JNDI(Java Naming and Directory Interface)

디렉터리 서비스에서 제공하는 데이터 및 객체를 발견하고 참고하기 위한 자바 API이다. web.xml등에 WAS의 데이터베이스 정보를 설정하너가 하는것 등등

### EJB(Enterprise JavaBeans)

기업환경의 시스템을 구현하기위한 서버측 컴포넌트 모델
비즈니스 로직을 구현한다.

### JVM(Java Virtual Machine)

자바 바이트 코드가 실행될 수 있는 실행 환경을 제공

### JRE(Java Runtime Environment)

JVM의 실제 구현체. JVM구동시 필요한 라이브러리와 다른 파일들이 포함되어 있다.

### JDK

JRE, 메뉴얼 문서 및 자바 도구들을 담고 있다

### 메이븐, 그레이들

스프링 의존성 관리도구로 스프링에 필요한 라이브러리를 다운 받고 관리한다.

### 스프링부트

스프링의 모든 설정을 간편화 해준다. XML기반을 없애준다. 버전관리를 쉽게 해준다

### 스프링의 모듈들

스프링 코어: 빈 컨테이너와 유틸리티 지원

스프링 컨텍스트: ApplicationContext, UI, 유효성 검증
엔터프라이즈 자바빈즈, 리모팅, 메일지원

스프링DAO: 트랜잭션 인프라, DAO, JDBC

스프링ORM: 하이버네이트, 아이바티스, JDO

스프링AOP: AOP얼라인스 호환, 관점지향 프로그래밍

스프링 웹:멀티파트 처리, 서블릿 리스터를 통한 컨텍스트 초기화

스프링 웹MVC:웹기반 MVC프레임워크