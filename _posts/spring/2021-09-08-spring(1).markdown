---
layout:     post
title:      "스프링의 기본 개념 정리"
subtitle:   "스프링의 기본 개념"
author:     "H37-J"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - spring
---

### 스프링이란?

자바 애플리케이션 개발을 위한 경량 프레임워크
여기서 경량은 최소한의 영향을 준다는 의미이다

### 서블릿

요청을 분석하고 처리하기 위해 적절한 컨트롤러로 요청을 보내는 것

### 핸들러맵핑

들어오는 요청을 핸들러에 매핑한다.컨트롤러 클래스 내의 타입이니 메서드 수준에 @RequestMapping을 적용함으로써 HTTP경로와 핸들러를 매핑한 HandlerMapping구현체를 자동으로 등록 해준닾

### 스프링의 모듈들

스프링 코어: 빈 컨테이너와 유틸리티 지원

스프링 컨텍스트: ApplicationContext, UI, 유효성 검증
엔터프라이즈 자바빈즈, 리모팅, 메일지원

스프링DAO: 트랜잭션 인프라, DAO, JDBC

스프링ORM: 하이버네이트, 아이바티스, JDO

스프링AOP: AOP얼라인스 호환, 관점지향 프로그래밍

스프링 웹:멀티파트 처리, 서블릿 리스터를 통한 컨텍스트 초기화

스프링 웹MVC:웹기반 MVC프레임워크

### 프레임워크와 라이브러리의 차이

프레임워크는 프레임워크가 사용자의 애플리케이션 코드를 가져다 사용한다. 즉 제어역전의 집합들이다.
라이브러리는 사용자가 만들어놓은 함수들의 집합을 사용자가 사용할 뿐이다.

### 제어역전과 의존성 주입

인스턴스를 생성할때 new나 팩터리 클래스가 아닌 IoC접근 방식을 사용해 런타임 순간에 외부 프로세스에서 인스턴스를 생성한다. 자바빈과 인터페이스 두가지로 구현한다. 클래스, 에너테이션, XML등으로 정의 할 수 있다

DI를 사용하면 애플리케이션을 인터페이스 기반으로 설계하는데 추가 코드가 거의 필요하지 않다. DI를 사용하면 의존성 구현체를 쉽게 다른 구현체로 바꿀 수 있다.

일반적으로 의존성 주입을 기반으로 하는 애플리케이션은 모든 주요 컴포넌트를 인터페이스로 정의하고 DI컨테이너를 사용해 인터페이스의 구현체를 생성하고 서로 연결한다.

## IoC, DI

컴포넌트의 의존성을 제공하고 이러한 의존성을 라이플사이클 전반에 걸쳐 관리한다
의존성이 필요한 객체를 의존객체, 대상이라한다.
IoC는 의존성 주입과 의존성 룩업이 있다.
의존성 룩업은 의존성 풀, 문맥에 따른 의존성 룩업으로 나뉜다.  
의존성 주입은 생성자 주입, 수정자 주입으로 나뉜다  

### IOC(제어역전)

라이브러리등으로 만든 애플레이켜선 코드가 프레임워크에 의해 제어된다. 프레임워크가 필요한 애플리케이션 코드를 선택하여 흐름을 진행한다. Controller, Serivce같은 객체들의 동작을 개발자가 구현하지만 어느시 점에 호출 할지는 프레임 워크가 결정한다, 예를들어 @Test어노테에이션을 붙이면 Junit 프레임 워크가 해당 메도스를 호출 하는둥 사용자의 코드를 프레임워크가 호출한다

### DI

클래스 모델이나 코드에는 런타임 시점의 의존관계가 드러나지 않는다. 그러기 위해서는 인터페이스만 의존하고 있어야 한다. 런타임 시점의 의존관계는 컨테이너나 팩토리 같은 제3의 존재가 결정한다.  
의존관계는 사용할 오브젝트에 대한 레퍼런스를 외부에서 제공(주입)해줌으로써 만들어진다.

### Bean

의존관계를 부여하는 오브젝트 자신이 스스로 객체를 만들고 그것을 빈으로 설정하면 자신이 만든 객체를 쉽게 불러 사용 할 수 있다.

### ApplicationContext

스프링 애플리케이션 전반에 걸쳐 모든 구성요소의 제어 작업을 담당하는 IOC엔진. 정보를 참고해서 빈의 설정, 관계설정등의 제어를 총괄한다.

### 애너테이션

* @Component: Spring framework <context:component:scan>과 같다

### JDBC

* 테이블에 있는 데이터가 매핑되는 클래스를 엔티티라고도 한다.
* JDBC Template는 JDBC의 하드코딩을 줄여준다.
* JDBC 와 자바 객체 ORM의 간격을 줄여주는것이 JPA이다.
