---
layout:     post
title:      "트랜잭션에 대하여"
subtitle:   "트랜잭션에 대하여"
author:     "H37-J"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - spring
---

### 트랜젝션

트랜젝션은 신뢰할 수 있는 엔터프라이즈 애플리케이션에서 매우 중요한 부분중 하나이다
가장 일반적인 트랜잭션 타입은 데이터베이스이다. 데이터베이스에서 데이터를 수정하면 트랜잭션을 시작하고 데이터를 수정한후 데이터베이스 수정 여부에따라 커밋하거나 롤백 하여야 한다.  
트랜잭션을 관리하는 가장 적절한 방법은 개발자는 선언적 방식으로 트랜잭션 요구사항을 미리 정의하고 스프링 JEE, AOP같은 프레임워크가 개발자를 대신해 트랜잭션 처리 로직을 담당하는 것이다.

### 글로벌 트랜잭션

글로벌 트랜잭션에는 네개의 주요부분이 있다. 첫번째는 백엔드 리소스로 RDBMS, 메시징 미들웨어, ERP시스템 등이있다. 두번째 부분은 리소스 메니저로 백엔드 리소스 공급 업체가 제공하며 백엔드 리소스에 접근하는데 사용하며, 세번쨰 부분은 JTA트랜 잭션 매니저로 트랜잭션에 참여하는 모든 리소스 매니저의 트랜잭션 상태를 관리, 조정, 동기화를 담당한다. 네번째는 애플리케이션으로 애플리케이션이 실행되는 스프링 프레임워크가 트랜잭션을 관리한다. JTA는 모든 JEE호환 애플리케이션 서버(JBoss, Websphrer, WebLogin, GlassFlash)가 지원하며 해당 애플리케이션 서버 내에서는 JNDI룩얼읍 통해서 트랜잭션을 아용할수 있다. 단독 실행형 애플리케이션이나 웹 컨테이너(톰캣, 제티) 환경에서 JTA/XA기능을 제공하는 오픈 소스와 상용 솔루션등도 있다.

### ACID

원자성, 일관성, 격리, 내구성. 사용자는 이들을 제어 할 수 없다. 하지만 트랜잭션 전파와 시간 초과를 제어할 수 있고 트랜잭션을 읽기전용으로 구성하고 격리수준을 지정 할 수 있다

### EX)

```java
private void function() {
    AService.save(A)
    BService.save(B)
}
```

가 있을 때 B에서 Exception이 발생하면 기본 트랜잭션은 클래스 단위로 발생하기 떄문에 A는 저장되고 롤백 되지 않는다
이 때

```java
@Transactional
private void function() {
    AService.save(A)
    BService.save(B)
}
```

로 묶어주면 A또한 롤백이 된다.